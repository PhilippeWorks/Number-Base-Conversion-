type: edu
files:
- name: src/converter/Main.java
  visible: true
  text: "package converter;\nimport java.util.Scanner;  // Import the Scanner class\n\
    \n\npublic class Main {\n    static int BINARYBASE = 2;\n    static int OCTALBASE\
    \ = 8;\n    static int HEXBASE = 16;\n    \n    public static String baseTwo(int\
    \ d) {\n        int input = d;\n        String decimal = String.valueOf(input);\
    \ \n        String answer = \"\";\n           \n        while (input / BINARYBASE\
    \ > 0) {\n            if (answer != \"\") {\n                input = input / BINARYBASE;\n\
    \            }\n            answer = String.valueOf(input % BINARYBASE) + answer;\n\
    \        } \n        \n        return answer;\n    }\n    \n    public static\
    \ String baseEight(int d) {\n        int input = d;\n        String decimal =\
    \ String.valueOf(input); \n        String answer = \"\";\n           \n      \
    \  while (input / OCTALBASE > 0) {\n            if (answer != \"\") {\n      \
    \          input = input / OCTALBASE;\n            }\n            answer = String.valueOf(input\
    \ % OCTALBASE) + answer;\n        } \n        \n        return answer;\n    }\n\
    \    \n    public static String baseSixteen(int d) {    \n        int input =\
    \ d;\n        String answer = \"\";\n        String target = \"\";\n        while\
    \ (input / HEXBASE > 0) {\n            if (answer != \"\") {\n               \
    \ input = input / HEXBASE;\n            }\n            switch (input % HEXBASE)\
    \ {\n                case 10:\n                    target = \"A\";\n         \
    \           break;\n                case 11:\n                    target = \"\
    B\";\n                    break;\n                case 12:\n                 \
    \   target = \"C\";\n                    break;\n                case 13:\n  \
    \                  target = \"D\";\n                    break;\n             \
    \   case 14:\n                    target = \"E\";\n                    break;\n\
    \                case 15:\n                    target = \"F\";\n             \
    \       break;\n                default:\n                    target = String.valueOf(input\
    \ % HEXBASE);\n                    break;\n            }\n            answer =\
    \ target + answer;\n        }\n        \n        return answer;\n    }\n\n   \
    \ public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\
    \        System.out.println(\"Enter number in decimal system: \");\n        int\
    \ decimal = sc.nextInt();\n        System.out.println(\"Enter Target base: \"\
    );\n        int base = sc.nextInt();\n        System.out.print(\"Conversion result:\
    \ \");\n        switch (base) {\n            case 2:\n                System.out.print(baseTwo(decimal));\n\
    \                break;\n            case 8:\n                System.out.print(baseEight(decimal));\n\
    \                break;\n            case 16:\n                System.out.print(baseSixteen(decimal));\n\
    \                break;\n        }\n        \n    }\n}\n"
  learner_created: false
- name: test/NumeralSystemConverterTest.java
  visible: false
  text: |-
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testcase.TestCase;
    import org.hyperskill.hstest.testing.TestedProgram;

    import java.util.Arrays;
    import java.util.List;
    import java.util.Random;

    public class NumeralSystemConverterTest extends StageTest<String> {

        @Override
        public List<TestCase<String>> generate() {

            return Arrays.asList(
                new TestCase<String>().setDynamicTesting(this::test1),
                new TestCase<String>().setDynamicTesting(this::test2),
                new TestCase<String>().setDynamicTesting(this::test3),
                new TestCase<String>().setDynamicTesting(this::test4),
                new TestCase<String>().setDynamicTesting(this::test5),
                new TestCase<String>().setDynamicTesting(this::test6),
                new TestCase<String>().setDynamicTesting(this::test7)
            );
        }

        //Check the exit command
        CheckResult test1() {
            TestedProgram main = new TestedProgram();
            String output = main.start().toLowerCase();

            if (!output.contains("/from decimal") || !output.contains("/to decimal") || !output.contains(
                "/exit")) {
                return CheckResult.wrong("Your program should prompt the user with the message \"Do you " +
                    "want to convert /from decimal of /to decimal? (To quit " +
                    "type /exit)\"");
            }

            main.execute("/exit");
            if (!main.isFinished()) {
                return CheckResult.wrong("Your program should terminate when the user enters \"/exit\"");
            }

            return CheckResult.correct();
        }

        //Check conversion from decimal
        //to base 2
        CheckResult test2() {

            TestedProgram main = new TestedProgram();
            String output;
            String lastLine;
            String userResult;
            String actualResult;
            String[] lines;
            int randomNumber;

            main.start();

            output = main.execute("/from").toLowerCase();
            if (!output.contains("decimal")) {
                return CheckResult.wrong("Your program should ask the user for the decimal number to be " +
                    "converted if they enter the command \"/from\"");
            }

            randomNumber = Integer.parseInt(getRandomSource(10));
            actualResult = convertDecimalToBaseX(randomNumber, 2);

            output = main.execute(String.valueOf(randomNumber)).toLowerCase();
            if (!output.contains("target base")) {
                return CheckResult
                    .wrong("Your program should ask the user for the target base " +
                        "after they enter the decimal number .");
            }

            output = main.execute("2").toLowerCase();
            if (!output.contains("result:")) {
                return CheckResult
                    .wrong("Your program should print the result in the format " +
                        "\"Conversion result: CONVERTED_NUMBER\", where CONVERTED_NUMBER is " +
                        "the result of the conversion.");
            }

            lines = output.trim().split("\n");
            lastLine = lines[lines.length - 1];

            try {
                userResult = lines[0].substring(output.indexOf(":") + 1).trim();
            } catch (Exception ignored) {
                return CheckResult.wrong("Looks like your output is wrong! Make sure you print the result as in examples!");
            }

            if (!userResult.equalsIgnoreCase(actualResult)) {
                return CheckResult.wrong("The conversion result of your program is wrong");
            }

            if (main.isFinished()) {
                return CheckResult.wrong("Your program should not terminate until the user enters \"/exit\"");
            }

            if (!lastLine.contains("/from") || !lastLine.contains("/to decimal") || !lastLine.contains(
                "/exit")) {
                return CheckResult.wrong("Your program should show the command prompt after each conversion" +
                    " until the user enters \"/exit\"");
            }

            main.execute("/exit");
            if (!main.isFinished()) {
                return CheckResult.wrong("Your program should terminate when the user enters \"/exit\"");
            }

            return CheckResult.correct();
        }

        //to base 16
        CheckResult test3() {
            TestedProgram main = new TestedProgram();
            String output;
            String lastLine;
            String userResult;
            String actualResult;
            String[] lines;
            int randomNumber;

            main.start();

            for (int i = 0; i < 5; i++) {
                randomNumber = Integer.parseInt(getRandomSource(10));
                actualResult = convertDecimalToBaseX(randomNumber, 16);
                main.execute("/from");
                main.execute(String.valueOf(randomNumber));

                output = main.execute("16").toLowerCase();
                lines = output.trim().split("\n");

                try {
                    userResult = lines[0].substring(output.indexOf(":") + 1).trim();
                    if (!userResult.equalsIgnoreCase(actualResult)) {
                        return CheckResult.wrong("The conversion result of your program is wrong");
                    }
                } catch (Exception exception) {
                    return CheckResult.wrong("Looks like your output has wrong format. Look at examples!");
                }

                if (main.isFinished()) {
                    return CheckResult.wrong("Your program should not terminate until the user enters \"/exit\"");
                }

                lastLine = lines[lines.length - 1];
                if (!lastLine.contains("/from") || !lastLine.contains("/to decimal") || !lastLine.contains(
                    "/exit")) {
                    return CheckResult.wrong("Your program should show the command prompt after each conversion" +
                        " until the user enters \"/exit\"");
                }

            }

            main.execute("/exit");
            if (!main.isFinished()) {
                return CheckResult.wrong("Your program should terminate when the user enters \"/exit\"");
            }

            return CheckResult.correct();
        }

        //to base 8
        CheckResult test4() {
            TestedProgram main = new TestedProgram();
            String output;
            String lastLine;
            String userResult;
            String actualResult;
            String[] lines;
            int randomNumber;

            main.start();

            for (int i = 0; i < 5; i++) {
                randomNumber = Integer.parseInt(getRandomSource(10));
                actualResult = convertDecimalToBaseX(randomNumber, 8);
                main.execute("/from");
                main.execute(String.valueOf(randomNumber));

                output = main.execute("8").toLowerCase();
                lines = output.trim().split("\n");

                try {
                    userResult = lines[0].substring(output.indexOf(":") + 1).trim();
                    if (!userResult.equalsIgnoreCase(actualResult)) {
                        return CheckResult.wrong("The conversion result of your program is wrong");
                    }
                } catch (Exception exception) {
                    return CheckResult.wrong("Looks like your output has wrong format. Look at examples!");
                }

                if (main.isFinished()) {
                    return CheckResult.wrong("Your program should not terminate until the user enters \"/exit\"");
                }

                lastLine = lines[lines.length - 1];
                if (!lastLine.contains("/from") || !lastLine.contains("/to decimal") || !lastLine.contains(
                    "/exit")) {
                    return CheckResult.wrong("Your program should show the command prompt after each conversion" +
                        " until the user enters \"/exit\"");
                }

            }

            main.execute("/exit");
            if (!main.isFinished()) {
                return CheckResult.wrong("Your program should terminate when the user enters \"/exit\"");
            }

            return CheckResult.correct();
        }

        //Check conversion to decimal
        //from base 2
        CheckResult test5() {
            TestedProgram main = new TestedProgram();
            String output;
            String lastLine;
            String userResult;
            String actualResult;
            String randomSourceNumber;
            String[] lines;

            main.start();

            output = main.execute("/to").toLowerCase();
            if (!output.contains("source number")) {
                return CheckResult.wrong("Your program should ask the user for the source number to be " +
                    "converted if they enter the command \"/to\", with the " +
                    "message \"Enter source number:\"");
            }

            randomSourceNumber = getRandomSource(2).toLowerCase();
            actualResult = convertBaseXToDecimal(randomSourceNumber, 2);

            output = main.execute(randomSourceNumber).toLowerCase();
            if (!output.contains("source base")) {
                return CheckResult.wrong("Your program should request for the source base after getting the" +
                    " source number from the user with the message \"Enter " +
                    "source base:\"");
            }

            output = main.execute("2").toLowerCase();
            if (!output.contains("decimal result:")) {
                return CheckResult.wrong("Your program should print the conversion result in the format " +
                    "\"Conversion to decimal result: CONVERTED_NUMBER\", where" +
                    " CONVERTED_NUMBER is the result of the conversion");
            }

            lines = output.trim().split("\n");
            lastLine = lines[lines.length - 1];


            try {
                userResult = lines[0].substring(output.indexOf(":") + 1).trim();
                if (!userResult.equalsIgnoreCase(actualResult)) {
                    return CheckResult.wrong("The conversion result of your program is wrong");
                }
            } catch (Exception exception) {
                return CheckResult.wrong("Looks like your output has wrong format. Look at examples!");
            }


            if (main.isFinished()) {
                return CheckResult.wrong("Your program should not terminate until the user enters \"/exit\"");
            }

            if (!lastLine.contains("/from") || !lastLine.contains("/to decimal") || !lastLine.contains(
                "/exit")) {
                return CheckResult.wrong("Your program should show the command prompt after each conversion" +
                    " until the user enters \"/exit\"");
            }

            main.execute("/exit");
            if (!main.isFinished()) {
                return CheckResult.wrong("Your program should terminate when the user enters \"/exit\"");
            }

            return CheckResult.correct();
        }

        //from base 8
        CheckResult test6() {
            TestedProgram main = new TestedProgram();
            String output;
            String lastLine;
            String userResult;
            String actualResult;
            String randomSourceNumber;
            String[] lines;

            main.start();

            for (int i = 0; i < 5; i++) {
                main.execute("/to");

                randomSourceNumber = getRandomSource(8);
                actualResult = convertBaseXToDecimal(randomSourceNumber, 8);

                main.execute(randomSourceNumber);
                output = main.execute("8").toLowerCase();

                lines = output.trim().split("\n");
                lastLine = lines[lines.length - 1];

                try {
                    userResult = lines[0].substring(output.indexOf(":") + 1).trim();
                    if (!userResult.equalsIgnoreCase(actualResult)) {
                        return CheckResult.wrong("The conversion result of your program is wrong");
                    }
                } catch (Exception exception) {
                    return CheckResult.wrong("Looks like your output has wrong format. Look at examples!");
                }

                if (main.isFinished()) {
                    return CheckResult.wrong("Your program should not terminate until the user enters \"/exit\"");
                }

                if (!lastLine.contains("/from") || !lastLine.contains("/to decimal") || !lastLine.contains(
                    "/exit")) {
                    return CheckResult.wrong("Your program should show the command prompt after each conversion" +
                        " until the user enters \"/exit\"");
                }

            }

            main.execute("/exit");
            if (!main.isFinished()) {
                return CheckResult.wrong("Your program should terminate when the user enters \"/exit\"");
            }

            return CheckResult.correct();
        }

        //from base 16
        CheckResult test7() {
            TestedProgram main = new TestedProgram();
            String output;
            String lastLine;
            String userResult;
            String actualResult;
            String randomSourceNumber;
            String[] lines;

            main.start();

            for (int i = 0; i < 5; i++) {
                main.execute("/to");

                randomSourceNumber = getRandomSource(16);
                actualResult = convertBaseXToDecimal(randomSourceNumber, 16);

                main.execute(randomSourceNumber);
                output = main.execute("16").toLowerCase();

                lines = output.trim().split("\n");
                lastLine = lines[lines.length - 1];

                try {
                    userResult = lines[0].substring(output.indexOf(":") + 1).trim();
                    if (!userResult.equalsIgnoreCase(actualResult)) {
                        return CheckResult.wrong("The conversion result of your program is wrong");
                    }
                } catch (Exception exception) {
                    return CheckResult.wrong("Looks like your output has wrong format. Look at examples!");
                }

                if (main.isFinished()) {
                    return CheckResult.wrong("Your program should not terminate until the user enters \"/exit\"");
                }

                if (!lastLine.contains("/from") || !lastLine.contains("/to decimal") || !lastLine.contains(
                    "/exit")) {
                    return CheckResult.wrong("Your program should show the command prompt after each conversion" +
                        " until the user enters \"/exit\"");
                }

            }

            main.execute("/exit");
            if (!main.isFinished()) {
                return CheckResult.wrong("Your program should terminate when the user enters \"/exit\"");
            }

            return CheckResult.correct();
        }


        //Helper methods
        String convertDecimalToBaseX(int num, int targetBase) {
            return Integer.toString(num, targetBase);
        }

        String convertBaseXToDecimal(String number, int sourceBase) {
            return String.valueOf(Integer.parseInt(number, sourceBase));
        }

        String getRandomSource(int sourceBase) {

            int n = new Random().nextInt(1000);

            return Integer.toString(n, sourceBase);

        }
    }
  learner_created: false
feedback_link: https://hyperskill.org/learn/step/13094#comment
status: Solved
record: 4
